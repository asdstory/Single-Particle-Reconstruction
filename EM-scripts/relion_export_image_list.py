#!/usr/bin/env python     

#####**************************************************************************#####
#Despcription: This program is used to introduce optic group into movies.star file.
#Copyright@JiangLab@NHLBI/NIH
#Author: Jiansen Jiang & Tongyi Dou
#Last Edit: 2021-07-02
#####**************************************************************************#####

DEBUG=0

import os
import re
import time
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn import cluster
from datetime import datetime
from optparse import OptionParser

np.set_printoptions(threshold=np.inf)

parser = OptionParser()
parser.add_option("--input_star", dest="input_star", type="string", default="", help="Input movies.star file generated by RELION Import job [default: %default]")
parser.add_option("--output_star", dest="output_star", type="string", default="", help="Output movies.star file [default: %default]")


(options, args) = parser.parse_args()



def read_image_list(fn):
    try:
        l = file(fn).readlines()
    except:
        print "Can't read image list file " + fn + "."
        exit(1)
    image_list = []
    for i in range(len(l)):
        pat = re.compile(r"(\w.+|-.+|\/.+)(\d{4})(\d{2})(\d{2})_(\d{2})(\d{2})(\d{2})(\d{2}).([a-z].+)")
        #"20151201_15090200"
        result = pat.match(l[i])
        if result:
            tmp = result.groups()
            timestamp = int(time.mktime((int(tmp[1]), int(tmp[2]), int(tmp[3]),  int(tmp[4]), int(tmp[5]), int(tmp[6]), 0, 0, -1)))
            image_list.append({'unix_timestamp' : timestamp, 'filename' : os.path.basename(l[i].strip()).split('.')[0], 'grid' : "", 'image_shift_x' : 0., 'image_shift_y' : 0., 'time_error' : 0, 'class' : 0})
    image_list.sort(key = lambda x : x['unix_timestamp'])
    return image_list


print "Read image list ... ",
image_list = read_image_list(options.input_star)
print "Done. %i images were read." % (len(image_list))


if DEBUG:
    for i in range(len(image_list)):
        print "Timestamp: %s\tGrid: %s\tTime error: %d\tImage shift x: %f\ty: %f" % (image_list[i]['unix_timestamp'], image_list[i]['grid'], image_list[i]['time_error'], image_list[i]['image_shift_x'], image_list[i]['image_shift_y'])

d = open("dictionary.txt","w")
d.write(shift_class_dict)
d.close()


